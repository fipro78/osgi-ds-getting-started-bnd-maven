<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.fipro.osgi.ds</groupId>
    <artifactId>getting-started</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>getting-started</name>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <bnd.version>7.0.0</bnd.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.core</artifactId>
                <version>8.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.annotation</artifactId>
                <version>8.1.0</version>
                <scope>provided</scope>
            </dependency>

            <!--  The OSGi framework RI is Equinox  -->
            <dependency>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.osgi</artifactId>
                <version>3.21.0</version>
                <scope>runtime</scope>
            </dependency>

            <!--  Declarative Services  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.component</artifactId>
                <version>1.5.1</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.component.annotations</artifactId>
                <version>1.5.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr</artifactId>
                <version>2.2.12</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>animal-sniffer-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--  Configuration Admin  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.cm</artifactId>
                <version>1.6.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.configadmin</artifactId>
                <version>1.9.26</version>
                <scope>runtime</scope>
            </dependency>

            <!--  OSGi Configurator  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.configurator</artifactId>
                <version>1.0.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.configurator</artifactId>
                <version>1.0.18</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.cm.json</artifactId>
                <version>2.0.6</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.parsson</groupId>
                <artifactId>jakarta.json</artifactId>
                <version>1.1.6</version>
            </dependency>

            <!--  OSGi Condition Service  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.condition</artifactId>
                <version>1.0.0</version>
                <type>jar</type>
            </dependency>

            <!--  OSGi Converter  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.util.converter</artifactId>
                <version>1.0.9</version>
                <scope>runtime</scope>
            </dependency>

            <!--  OSGi Function  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.util.function</artifactId>
                <version>1.2.0</version>
                <scope>runtime</scope>
            </dependency>

            <!--  OSGi Promise  -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.util.promise</artifactId>
                <version>1.3.0</version>
                <scope>runtime</scope>
            </dependency>

            <!-- OSGi Namespace Service -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.namespace.service</artifactId>
                <version>1.0.0</version>
                <scope>provided</scope>
            </dependency>

            <!-- Jakarta Servlet Whiteboard -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.service.servlet</artifactId>
                <version>2.0.0</version>
            </dependency>

            <!-- 
		        org.apache.felix.http.jetty:
		        - implementation of the R8.1 OSGi Servlet Service, the R7 OSGi Http Service and the R7 OSGi Http Whiteboard Specification 
		    -->
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.http.jetty</artifactId>
                <version>5.1.26</version>
                <scope>runtime</scope>
            </dependency>

            <!--  Http Servlet 3.1 API with contract  -->
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.http.servlet-api</artifactId>
                <version>3.0.0</version>
            </dependency>

            <!-- SLF4J -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.16</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-nop</artifactId>
                <version>2.0.16</version>
                <scope>runtime</scope>
            </dependency>

            <!-- extender that facilitates the use of JRE SPI providers -->
            <dependency>
                <groupId>org.apache.aries.spifly</groupId>
                <artifactId>org.apache.aries.spifly.dynamic.framework.extension</artifactId>
                <version>1.3.7</version>
                <scope>runtime</scope>
            </dependency>

            <!--  The Gogo Shell  -->
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.shell</artifactId>
                <version>1.1.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.runtime</artifactId>
                <version>1.1.6</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.command</artifactId>
                <version>1.1.2</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.compendium</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.test.bom</artifactId>
                <version>1.3.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <release>${java.version}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>

                <!-- Use the bnd-maven-plugin and assemble the symbolic names -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <bnd>
            <![CDATA[
Bundle-SymbolicName: ${project.artifactId}
-sources: true
-contract: *
-noimportjava: true
-fixupmessages: The JAR is empty:
]]>
          </bnd>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>bnd-process</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Required to make the maven-jar-plugin pick up the bnd 
                  generated manifest. Also avoid packaging empty Jars -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.4.2</version>
                    <configuration>
                        <archive>
                            <manifestFile>
                                ${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        </archive>
                        <skipIfEmpty>true</skipIfEmpty>
                    </configuration>
                </plugin>
                <!-- Setup the indexer for running and testing -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-indexer-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <configuration>
                        <localURLs>REQUIRED</localURLs>
                        <attach>false</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <id>index</id>
                            <goals>
                                <goal>index</goal>
                            </goals>
                            <configuration>
                                <indexName>${project.artifactId}</indexName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-index</id>
                            <goals>
                                <goal>index</goal>
                            </goals>
                            <configuration>
                                <indexName>${project.artifactId} Test</indexName>
                                <outputFile>
                                    ${project.build.directory}/test-index.xml</outputFile>
                                <scopes>
                                    <scope>test</scope>
                                </scopes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Define the version of the resolver plugin we use -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-resolver-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <configuration>
                        <failOnChanges>false</failOnChanges>
                        <bndruns></bndruns>
                    </configuration>
                    <executions>
                        <!-- Integration Test Configuration -->
                        <execution>
                            <id>resolve-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>resolve</goal>
                            </goals>
                            <configuration>
                                <outputBndrunDir>${project.build.directory}</outputBndrunDir>
                                <bndruns>
                                    <include>test.bndrun</include>
                                </bndruns>
                                <failOnChanges>false</failOnChanges>
                                <includeDependencyManagement>true</includeDependencyManagement>
                                <reportOptional>false</reportOptional>
                                <scopes>
                                    <scope>compile</scope>
                                    <scope>runtime</scope>
                                    <scope>test</scope>
                                </scopes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Define the version of the export plugin we use -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-export-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <configuration>
                        <resolve>true</resolve>
                        <failOnChanges>false</failOnChanges>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>export</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Define the version of the testing plugin that we use 
				and the integration tests execution -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-testing-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <executions>
                        <!-- OSGi integration tests execution -->
                        <execution>
                            <goals>
                                <goal>testing</goal>
                            </goals>
                            <configuration>
                                <bndrunDir>${project.build.directory}</bndrunDir>
                                <bndruns>
                                    <include>test.bndrun</include>
                                </bndruns>
                                <failOnChanges>false</failOnChanges>
                                <includeDependencyManagement>true</includeDependencyManagement>
                                <resolve>false</resolve>
                                <scopes>
                                    <scope>compile</scope>
                                    <scope>runtime</scope>
                                    <scope>test</scope>
                                </scopes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Define the version of the baseline plugin we use and 
                  avoid failing when no baseline jar exists. (for example before the first 
                  release) -->
                <plugin>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-baseline-maven-plugin</artifactId>
                    <version>${bnd.version}</version>
                    <configuration>
                        <failOnMissing>false</failOnMissing>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>baseline</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <modules>
        <module>org.fipro.inverter.api</module>
        <module>org.fipro.inverter.provider</module>
        <module>org.fipro.inverter.command</module>
        <module>org.fipro.inverter.integration.tests</module>
        <module>org.fipro.inverter.http</module>
        <module>org.fipro.ds.configurable</module>
        <module>org.fipro.ds.other</module>
        <module>org.fipro.ds.configurator</module>
        <module>org.fipro.ds.data.api</module>
        <module>org.fipro.ds.data.offline</module>
        <module>org.fipro.ds.data.online</module>
        <module>org.fipro.ds.config</module>
        <module>org.fipro.oneshot.api</module>
        <module>org.fipro.oneshot.provider</module>
        <module>org.fipro.oneshot.command</module>
        <module>org.fipro.oneshot.assassinate</module>
    </modules>
</project>
